pipeline {
    agent any
    tools {nodejs "Node"}
  
    stages {
       stage ('cleanup') {
            steps{
                sh 'pwd'
                sh 'ls -ltr'
            }
       }
       stage('Git') {
 
            steps {
 
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'git-creds', url: 'https://github.com/kiranbakale/Docker-Samples.git']]])                   }
 
        }

        
        stage('Install dependencies') {
            steps {
                cd nodejs
                sh 'npm init -y'
                sh 'npm i express'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // build the project and create a JAR files
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "kiran63/nodejsrepo:latest"
                DOCKERFILE_LOCATION = "nodejs/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('docker-cred1')
            }
            steps {
                script {
                    sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred1") {
                        dockerImage.push()
                    }
                }
            }
        }
        
    }
}
